-- ************************************************************************
-- $Id: coregen_comp_defs.vhd,v 1.15 2007/03/16 19:13:41 ostlerf Exp $
-- ************************************************************************
--  Copyright(C) 2000, 2007 Xilinx, Inc. All rights reserved.
-- ************************************************************************
--
--   Description:
--   Component declarations for all black box netlists generated by
--   running COREGEN when XST elaborated the client core
--
--
--  ...
--
--  FLO         04/24/06
-- ^^^^^^
--  Added virtex5 mappings for components
--    cam_v5_0,
--    async_fifo_v4_0, async_fifo_v5_1, async_fifo_v6_0, async_fifo_v6_1,
--    sync_fifo_v4_0.
--
-- ~~~~~~
--     DET     11/3/2006     11/03/06
-- ~~~~~~
--     - Added sync_fifo_v5_0
-- ^^^^^^
--  FLO         03/09/07
-- ^^^^^^
--  Added spartan3an and spartan3adsp mappings for components
--    cam_v5_0,
--    async_fifo_v4_0, async_fifo_v5_1, async_fifo_v6_0, async_fifo_v6_1,
--    sync_fifo_v4_0, sync_fifo_v5_0.
--
-- ~~~~~~
--

LIBRARY ieee;
USE ieee.std_logic_1164.ALL;

PACKAGE coregen_comp_defs IS

-- Start CAM v5.0 model --------------------------------------

  COMPONENT cam_v5_0
    GENERIC (c_addr_type             : integer := 2;
             c_cmp_data_mask_width   : integer := 4;
             c_cmp_din_width         : integer := 4;
             c_data_mask_width       : integer := 4;
             c_depth                 : integer := 16;
             c_din_width             : integer := 4;
             c_enable_rlocs          : integer := 0;
             c_family                : string  := "";
             c_has_cmp_data_mask     : integer := 0;
             c_has_cmp_din           : integer := 0;
             c_has_data_mask         : integer := 0;
             c_has_en                : integer := 0;
             c_has_multiple_match    : integer := 0;
             c_has_read_warning      : integer := 0;
             c_has_single_match      : integer := 0;
             c_has_we                : integer := 1;
             c_has_wr_addr           : integer := 1;
             c_match_addr_width      : integer := 16;
             c_match_resolution_type : integer := 0;
             c_mem_init              : integer := 0;
             c_mem_init_file         : string  := "";
             c_mem_type              : integer := 0;
             c_read_cycles           : integer := 1;
             c_reg_outputs           : integer := 0;
             c_ternary_mode          : integer := 0;
             c_width                 : integer := 4;
             c_wr_addr_width         : integer := 4
            );
       PORT (CLK            : IN  std_logic;
             CMP_DATA_MASK  : IN  std_logic_vector(c_cmp_data_mask_width-1 DOWNTO 0);  --default_value := (OTHERS => '0');
             CMP_DIN        : IN  std_logic_vector(c_cmp_din_width-1 DOWNTO 0);  --default_value := (OTHERS => '0');
             DATA_MASK      : IN  std_logic_vector(c_data_mask_width-1 DOWNTO 0);
             DIN            : IN  std_logic_vector(c_din_width-1 DOWNTO 0);
             EN             : IN  std_logic;
             WE             : IN  std_logic;
             WR_ADDR        : IN  std_logic_vector(c_wr_addr_width-1 DOWNTO 0);
             BUSY           : OUT std_logic;
             MATCH          : OUT std_logic;
             MATCH_ADDR     : OUT std_logic_vector(c_match_addr_width-1 DOWNTO 0);
             MULTIPLE_MATCH : OUT std_logic;
             READ_WARNING   : OUT std_logic;
             SINGLE_MATCH   : OUT std_logic
             );
 END COMPONENT;

-- The following tells XST that the cam_v5_0 is a black box
-- which should be generated using the command given by the value
-- of this attribute
-- Note the fully qualified SIM (JAVA class) name that forms the 
-- basis of the core
attribute box_type: string;
attribute box_type of cam_v5_0: component is "black_box";
attribute GENERATOR_DEFAULT: string;
attribute GENERATOR_DEFAULT of cam_v5_0: component is 
     "edk_generatecore com.xilinx.ip.cam_v5_0.cam_v5_0 -a map_qvirtex_to=virtex map_qrvirtex_to=virtex map_virtexe_to=virtex map_qvirtex2_to=virtex2 map_qrvirtex2_to=virtex2 map_virtex4_to=virtex2 map_spartan2_to=virtex map_spartan2e_to=virtex map_spartan3e_to=spartan3 map_virtex5_to=virtex2 map_spartan3a_to=spartan3 map_spartan3an_to=spartan3 map_spartan3adsp_to=spartan3";
  
-- Start Async FIFO 4.0 model --------------------------------------

 COMPONENT async_fifo_v4_0 
    GENERIC (
             C_ENABLE_RLOCS         : integer := 0;
             C_DATA_WIDTH           : integer := 16;
             C_FIFO_DEPTH           : integer := 63;
             C_HAS_ALMOST_FULL      : integer := 1;
             C_HAS_ALMOST_EMPTy     : integer := 1;
             C_HAS_WR_COUNT         : integer := 1;
             C_HAS_RD_COUNT         : integer := 1;             
             C_WR_COUNT_WIDTH       : integer := 2;
             C_RD_COUNT_WIDTH       : integer := 2;
             C_HAS_RD_ACK           : integer := 0;
             C_RD_ACK_LOW           : integer := 0;
             C_HAS_RD_ERR           : integer := 0;
             C_RD_ERR_LOW           : integer := 0;
             C_HAS_WR_ACK           : integer := 0;
             C_WR_ACK_LOW           : integer := 0;
             C_HAS_WR_ERR           : integer := 0;
             C_WR_ERR_LOW           : integer := 0;
             C_USE_BLOCKMEM         : integer := 1   
            );

       PORT (
             Din            : in  std_logic_vector(C_DATA_WIDTH-1 downto 0) := (others => '0');
             Wr_en          : in  std_logic := '1';
             Wr_clk         : in  std_logic := '1';
             Rd_en          : in  std_logic := '0';
             Rd_clk         : in  std_logic := '1';
             Ainit          : in  std_logic := '1';   
             Dout           : out std_logic_vector(C_DATA_WIDTH-1 downto 0);
             Full           : out std_logic; 
             Empty          : out std_logic; 
             Almost_full    : out std_logic;  --optional. default=false
             Almost_empty   : out std_logic;  --optional. default=false
             Wr_count       : out std_logic_vector(C_WR_COUNT_WIDTH-1 downto 0);
                              --optional. default=true
             Rd_count       : out std_logic_vector(C_RD_COUNT_WIDTH-1 downto 0);
                              --optional. default=false
             Rd_ack         : out std_logic;
             Rd_err         : out std_logic;
             Wr_ack         : out std_logic;
             Wr_err         : out std_logic
             ); 
 END COMPONENT;

-- The following tells XST that the async_fifo_v4_0 is a black box
-- which should be generated using the command given by the value
-- of this attribute
-- Note the fully qualified SIM (JAVA class) name that forms the 
-- basis of the core
attribute box_type of async_fifo_v4_0: component is "black_box";
attribute GENERATOR_DEFAULT of async_fifo_v4_0: component is 
     "edk_generatecore com.xilinx.ip.async_fifo_v4_0.async_fifo_v4_0 -a map_qvirtex_to=virtex map_qrvirtex_to=virtex map_virtexe_to=virtex map_qvirtex2_to=virtex2 map_qrvirtex2_to=virtex2 map_virtex4_to=virtex2 map_spartan2_to=virtex map_spartan2e_to=virtex map_spartan3_to=virtex2 map_spartan3e_to=virtex2 map_virtex5_to=virtex2 map_spartan3a_to=virtex2  map_spartan3an_to=virtex2 map_spartan3adsp_to=virtex2";

-- End Async FIFO 4.0 model --------------------------------------


    
-- Start Async FIFO 5.1 model --------------------------------------                                                   
                          
 COMPONENT async_fifo_v5_1 
    GENERIC (
             C_DATA_WIDTH       : integer := 16;
             C_ENABLE_RLOCS     : integer := 0;
             C_FIFO_DEPTH       : integer := 63;
             C_HAS_ALMOST_EMPTY : integer := 1;
             C_HAS_ALMOST_FULL  : integer := 1;
             C_HAS_RD_ACK       : integer := 0;
             C_HAS_RD_COUNT     : integer := 1;
             C_HAS_RD_ERR       : integer := 0;
             C_HAS_WR_ACK       : integer := 0;
             C_HAS_WR_COUNT     : integer := 1;
             C_HAS_WR_ERR       : integer := 0;
             C_RD_ACK_LOW       : integer := 0;
             C_RD_COUNT_WIDTH   : integer := 2;
             C_RD_ERR_LOW       : integer := 0;
             C_USE_BLOCKMEM     : integer := 1;
             C_WR_ACK_LOW       : integer := 0;
             C_WR_COUNT_WIDTH   : integer := 2;
             C_WR_ERR_LOW       : integer := 0   
            );

       PORT (
             Din            : in std_logic_vector(C_DATA_WIDTH-1 downto 0) := (others => '0');
             Wr_en          : in std_logic := '1';
             Wr_clk         : in std_logic := '1';
             Rd_en          : in std_logic := '0';
             Rd_clk         : in std_logic := '1';
             Ainit          : in std_logic := '1';   
             Dout           : out std_logic_vector(C_DATA_WIDTH-1 downto 0);
             Full           : out std_logic; 
             Empty          : out std_logic; 
             Almost_full    : out std_logic;  --optional. default=false
             Almost_empty   : out std_logic;  --optional. default=false
             Wr_count       : out std_logic_vector(C_WR_COUNT_WIDTH-1 downto 0);
                              --optional. default=true
             Rd_count       : out std_logic_vector(C_RD_COUNT_WIDTH-1 downto 0);
                              --optional. default=false
             Rd_ack         : out std_logic;
             Rd_err         : out std_logic;
             Wr_ack         : out std_logic;
             Wr_err         : out std_logic
            ); 
 END COMPONENT;


--attribute box_type: string;
attribute box_type of async_fifo_v5_1: component is "black_box";
--attribute GENERATOR_DEFAULT: string;
attribute GENERATOR_DEFAULT of async_fifo_v5_1: component is 
     "edk_generatecore com.xilinx.ip.async_fifo_v5_1.async_fifo_v5_1 -a map_qvirtex_to=virtex map_qrvirtex_to=virtex map_virtexe_to=virtex map_qvirtex2_to=virtex2 map_qrvirtex2_to=virtex2 map_virtex4_to=virtex2 map_spartan2_to=virtex map_spartan2e_to=virtex map_spartan3_to=virtex2 map_spartan3e_to=virtex2 map_virtex5_to=virtex2 map_spartan3a_to=virtex2  map_spartan3an_to=virtex2 map_spartan3adsp_to=virtex2";

-- End Async FIFO 5.1 model --------------------------------------



-- Start Async FIFO 6.0 model --------------------------------------                                                   

 COMPONENT async_fifo_v6_0 
    GENERIC (
             C_DATA_WIDTH       : integer := 16;
             C_ENABLE_RLOCS     : integer := 0;
             C_FIFO_DEPTH       : integer := 63;
             C_HAS_ALMOST_EMPTY : integer := 1;
             C_HAS_ALMOST_FULL  : integer := 1;
             C_HAS_RD_ACK       : integer := 0;
             C_HAS_RD_COUNT     : integer := 1;
             C_HAS_RD_ERR       : integer := 0;
             C_HAS_WR_ACK       : integer := 0;
             C_HAS_WR_COUNT     : integer := 1;
             C_HAS_WR_ERR       : integer := 0;
             C_RD_ACK_LOW       : integer := 0;
             C_RD_COUNT_WIDTH   : integer := 2;
             C_RD_ERR_LOW       : integer := 0;
             C_USE_BLOCKMEM     : integer := 1;
             C_WR_ACK_LOW       : integer := 0;
             C_WR_COUNT_WIDTH   : integer := 2;
             C_WR_ERR_LOW       : integer := 0   
            );

       PORT (
             Din            : in std_logic_vector(C_DATA_WIDTH-1 downto 0) := (others => '0');
             Wr_en          : in std_logic := '1';
             Wr_clk         : in std_logic := '1';
             Rd_en          : in std_logic := '0';
             Rd_clk         : in std_logic := '1';
             Ainit          : in std_logic := '1';   
             Dout           : out std_logic_vector(C_DATA_WIDTH-1 downto 0);
             Full           : out std_logic; 
             Empty          : out std_logic; 
             Almost_full    : out std_logic;  --optional. default=false
             Almost_empty   : out std_logic;  --optional. default=false
             Wr_count       : out std_logic_vector(C_WR_COUNT_WIDTH-1 downto 0);
                              --optional. default=true
             Rd_count       : out std_logic_vector(C_RD_COUNT_WIDTH-1 downto 0);
                              --optional. default=false
             Rd_ack         : out std_logic;
             Rd_err         : out std_logic;
             Wr_ack         : out std_logic;
             Wr_err         : out std_logic
            ); 
 END COMPONENT;


--attribute box_type: string;
attribute box_type of async_fifo_v6_0: component is "black_box";
--attribute GENERATOR_DEFAULT: string;
attribute GENERATOR_DEFAULT of async_fifo_v6_0: component is 
     "edk_generatecore com.xilinx.ip.async_fifo_v6_0.async_fifo_v6_0 -a map_qvirtex_to=virtex map_qrvirtex_to=virtex map_virtexe_to=virtex map_qvirtex2_to=virtex2 map_qrvirtex2_to=virtex2 map_virtex4_to=virtex2 map_spartan2_to=virtex map_spartan2e_to=virtex map_spartan3_to=virtex2 map_spartan3e_to=virtex2 map_virtex5_to=virtex2 map_spartan3a_to=virtex2  map_spartan3an_to=virtex2 map_spartan3adsp_to=virtex2";

-- End Async FIFO 6.0 model --------------------------------------


-- Start Async FIFO 6.1 model --------------------------------------                                                   

 COMPONENT async_fifo_v6_1 
    GENERIC (
             C_DATA_WIDTH       : integer := 16;
             C_ENABLE_RLOCS     : integer := 0;
             C_FIFO_DEPTH       : integer := 63;
             C_HAS_ALMOST_EMPTY : integer := 1;
             C_HAS_ALMOST_FULL  : integer := 1;
             C_HAS_RD_ACK       : integer := 0;
             C_HAS_RD_COUNT     : integer := 1;
             C_HAS_RD_ERR       : integer := 0;
             C_HAS_WR_ACK       : integer := 0;
             C_HAS_WR_COUNT     : integer := 1;
             C_HAS_WR_ERR       : integer := 0;
             C_RD_ACK_LOW       : integer := 0;
             C_RD_COUNT_WIDTH   : integer := 2;
             C_RD_ERR_LOW       : integer := 0;
             C_USE_BLOCKMEM     : integer := 1;
             C_WR_ACK_LOW       : integer := 0;
             C_WR_COUNT_WIDTH   : integer := 2;
             C_WR_ERR_LOW       : integer := 0   
            );

       PORT (
             Din            : in std_logic_vector(C_DATA_WIDTH-1 downto 0) := (others => '0');
             Wr_en          : in std_logic := '1';
             Wr_clk         : in std_logic := '1';
             Rd_en          : in std_logic := '0';
             Rd_clk         : in std_logic := '1';
             Ainit          : in std_logic := '1';   
             Dout           : out std_logic_vector(C_DATA_WIDTH-1 downto 0);
             Full           : out std_logic; 
             Empty          : out std_logic; 
             Almost_full    : out std_logic;  --optional. default=false
             Almost_empty   : out std_logic;  --optional. default=false
             Wr_count       : out std_logic_vector(C_WR_COUNT_WIDTH-1 downto 0);
                              --optional. default=true
             Rd_count       : out std_logic_vector(C_RD_COUNT_WIDTH-1 downto 0);
                              --optional. default=false
             Rd_ack         : out std_logic;
             Rd_err         : out std_logic;
             Wr_ack         : out std_logic;
             Wr_err         : out std_logic
            ); 
 END COMPONENT;


--attribute box_type: string;
attribute box_type of async_fifo_v6_1: component is "black_box";
--attribute GENERATOR_DEFAULT: string;
attribute GENERATOR_DEFAULT of async_fifo_v6_1: component is 
     "edk_generatecore com.xilinx.ip.async_fifo_v6_1.async_fifo_v6_1 -a map_qvirtex_to=virtex map_qrvirtex_to=virtex map_virtexe_to=virtex map_qvirtex2_to=virtex2 map_qrvirtex2_to=virtex2 map_spartan2_to=virtex map_spartan2e_to=virtex map_virtex5_to=virtex4 map_spartan3a_to=spartan3e spartan3an_to=spartan3e spartan3adsp_to=spartan3e ";

-- End Async FIFO 6.1 model --------------------------------------
 
 
 
 
                
-- Start Sync FIFO 4.0 model --------------------------------------                                                   

  COMPONENT sync_fifo_v4_0 
      GENERIC (
              c_dcount_width       :  integer := 1 ;
              c_enable_rlocs       :  integer := 0 ;
              c_has_dcount         :  integer := 0 ;
              c_has_rd_ack         :  integer := 0 ;
              c_has_rd_err         :  integer := 0 ;
              c_has_wr_ack         :  integer := 0 ;
              c_has_wr_err         :  integer := 0 ;
              c_memory_type        :  integer := 0 ;
              c_ports_differ       :  integer := 0 ;
              c_rd_ack_low         :  integer := 0 ;
              c_read_data_width    :  integer := 0 ;
              c_read_depth         :  integer := 16;
              c_rd_err_low         :  integer := 0 ;
              c_wr_ack_low         :  integer := 0 ;
              c_wr_err_low         :  integer := 0 ;
              c_write_data_width   :  integer := 0 ;
              c_write_depth        :  integer := 16
              );
      port (  CLK          : in std_logic;
              SINIT        : in std_logic;
              DIN          : in  std_logic_vector(c_write_data_width-1 downto 0);
              WR_EN        : in std_logic;
              RD_EN        : in  std_logic;
              DOUT         : out std_logic_vector(c_read_data_width-1 downto 0);
              FULL         : out std_logic;
              EMPTY        : out std_logic;
              RD_ACK       : out std_logic;
              WR_ACK       : out std_logic;
              RD_ERR       : out std_logic;
              WR_ERR       : out std_logic;
              DATA_COUNT   : out std_logic_vector(c_dcount_width-1 downto 0)
             );
  end COMPONENT;

    
-- attribute box_type: string;
attribute box_type of sync_fifo_v4_0: component is "black_box";
--attribute GENERATOR_DEFAULT: string;
attribute GENERATOR_DEFAULT of sync_fifo_v4_0: component is 
     "edk_generatecore com.xilinx.ip.sync_fifo_v4_0.sync_fifo_v4_0 -a map_qvirtex_to=virtex map_qrvirtex_to=virtex map_virtexe_to=virtex map_qvirtex2_to=virtex2 map_qrvirtex2_to=virtex2 map_virtex4_to=virtex2 map_spartan2_to=virtex map_spartan2e_to=virtex map_spartan3_to=virtex2 map_spartan3e_to=virtex2 map_virtex5_to=virtex2 map_spartan3a_to=virtex2 map_spartan3an_to=virtex2 map_spartan3adsp_to=virtex2";


-- End Sync FIFO 4.0 model --------------------------------------                                                   
                
                

-- Start Sync FIFO 5.0 model --------------------------------------                                                   

COMPONENT sync_fifo_v5_0
    GENERIC (
              c_dcount_width       :    integer := 1 ;
              c_enable_rlocs       :    integer := 0 ;
              c_has_dcount         :    integer := 0 ;
              c_has_rd_ack         :    integer := 0 ;
              c_has_rd_err         :    integer := 0 ;
              c_has_wr_ack         :    integer := 0 ;
              c_has_wr_err         :    integer := 0 ;
              c_memory_type        :    integer := 0 ;
              c_ports_differ       :    integer := 0 ;
              c_rd_ack_low         :    integer := 0 ;
              c_read_data_width    :    integer := 0 ;
              c_read_depth         :    integer := 16;
              c_rd_err_low         :    integer := 0 ;
              c_wr_ack_low         :    integer := 0 ;
              c_wr_err_low         :    integer := 0 ;
              c_write_data_width   :    integer := 0 ;
              c_write_depth        :    integer := 16
              );
    port (  CLK          : in std_logic;
            SINIT        : in std_logic;
            DIN          : in  std_logic_vector(c_write_data_width-1 downto 0);
            WR_EN        : in std_logic;
            RD_EN        : in  std_logic;
            DOUT         : out std_logic_vector(c_read_data_width-1 downto 0);
            FULL         : out std_logic;
            EMPTY        : out std_logic;
            RD_ACK       : out std_logic;
            WR_ACK       : out std_logic;
            RD_ERR       : out std_logic;
            WR_ERR       : out std_logic;
            DATA_COUNT   : out std_logic_vector(c_dcount_width-1 downto 0)
           );
end COMPONENT;

--ATTRIBUTE box_type : STRING; 
ATTRIBUTE box_type OF sync_fifo_v5_0 : COMPONENT IS "black_box"; 
--ATTRIBUTE GENERATOR_DEFAULT : STRING; 
ATTRIBUTE GENERATOR_DEFAULT OF sync_fifo_v5_0 : COMPONENT IS 
     "edk_generatecore com.xilinx.ip.sync_fifo_v5_0.sync_fifo_v5_0 -a map_qvirtex_to=virtex map_qrvirtex_to=virtex map_virtexe_to=virtex map_qvirtex2_to=virtex2 map_qrvirtex2_to=virtex2 map_spartan2e_to=spartan2 map_spartan3e_to=spartan3 map_virtex5_to=virtex4 map_spartan3a_to=spartan3 map_spartan3an_to=spartan3  map_spartan3adsp_to=spartan3  ";

-- End Sync FIFO 5.0 model --------------------------------------



END coregen_comp_defs;
